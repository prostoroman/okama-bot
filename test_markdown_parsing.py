#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ markdown —Ç–∞–±–ª–∏—Ü—ã
"""

def test_markdown_parsing():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ markdown —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        import pandas as pd
        
        # –¢–µ—Å—Ç–æ–≤–∞—è markdown —Ç–∞–±–ª–∏—Ü–∞
        test_table = """| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ |
|---------|----------|
| CAGR (5 –ª–µ—Ç) | 12.45% |
| –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å | 18.32% |
| –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞ | 0.68 |
| –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞ | -15.23% |"""
        
        print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ markdown —Ç–∞–±–ª–∏—Ü—ã...")
        print("–ò—Å—Ö–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞:")
        print(test_table)
        print("\n" + "="*50 + "\n")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–∑ bot.py
        lines = test_table.strip().split('\n')
        
        # Find the separator line (contains |---|)
        separator_line = None
        separator_index = -1
        for i, line in enumerate(lines):
            if '|---' in line or '| ---' in line:
                separator_line = line
                separator_index = i
                break
        
        if separator_index == -1:
            print("‚ùå No separator line found in markdown table")
            return False
        
        # Extract headers (line before separator)
        if separator_index > 0:
            header_line = lines[separator_index - 1]
            headers = [col.strip() for col in header_line.split('|')[1:-1]]  # Remove empty first/last elements
        else:
            print("‚ùå No header line found before separator")
            return False
        
        print(f"Headers: {headers}")
        
        # Extract data rows (lines after separator)
        data_rows = []
        for i in range(separator_index + 1, len(lines)):
            line = lines[i].strip()
            if line and line.startswith('|') and line.endswith('|'):
                # Split by | and remove empty first/last elements
                row_data = [cell.strip() for cell in line.split('|')[1:-1]]
                if len(row_data) == len(headers):
                    data_rows.append(row_data)
        
        print(f"Data rows: {data_rows}")
        
        if not data_rows:
            print("‚ùå No data rows found in markdown table")
            return False
        
        # Create DataFrame
        df = pd.DataFrame(data_rows, columns=headers)
        
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–∞!")
        print(f"–†–∞–∑–º–µ—Ä DataFrame: {df.shape}")
        print("\nDataFrame:")
        print(df)
        print("\n–ö–æ–ª–æ–Ω–∫–∏:", df.columns.tolist())
        return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ markdown —Ç–∞–±–ª–∏—Ü—ã...")
    success = test_markdown_parsing()
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
