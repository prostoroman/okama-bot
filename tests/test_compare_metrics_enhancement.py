#!/usr/bin/env python3
"""
Test script to verify the enhanced compare metrics functionality:
1. CAGR 1 year and CAGR 5 years are added to the first table
2. Property names are used instead of numeric indices in the second table
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import okama as ok
import pandas as pd
from bot import ShansAi

def test_compare_metrics_enhancement():
    """Test the enhanced compare metrics functionality"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    print("=" * 50)
    
    # Test symbols
    symbols = ['SPY.US', 'QQQ.US']
    currency = 'USD'
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã: {symbols}")
    print(f"üí∞ –í–∞–ª—é—Ç–∞: {currency}")
    
    try:
        # Create bot instance
        bot = ShansAi()
        
        # Test 1: Check that describe data has property names
        print(f"\nüîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã describe –¥–∞–Ω–Ω—ã—Ö")
        asset_list = ok.AssetList(symbols, ccy=currency)
        describe_data = asset_list.describe()
        
        print(f"   –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {describe_data.shape}")
        print(f"   –ö–æ–ª–æ–Ω–∫–∏: {list(describe_data.columns)}")
        print(f"   –ò–Ω–¥–µ–∫—Å—ã: {list(describe_data.index)}")
        
        # Check if property column exists
        if 'property' in describe_data.columns:
            print(f"   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'property' –Ω–∞–π–¥–µ–Ω–∞")
            property_names = describe_data['property'].tolist()
            print(f"   –ù–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {property_names}")
        else:
            print(f"   ‚ùå –ö–æ–ª–æ–Ω–∫–∞ 'property' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # Test 2: Check CAGR calculations for 1y and 5y
        print(f"\nüîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ CAGR 1–≥ –∏ 5–ª")
        
        # Create expanded symbols and portfolio contexts for testing
        expanded_symbols = []
        portfolio_contexts = []
        
        for symbol in symbols:
            try:
                asset = ok.Asset(symbol)
                expanded_symbols.append(symbol)
                portfolio_contexts.append({
                    'portfolio_object': asset,
                    'portfolio_symbols': [symbol]
                })
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∞ {symbol}: {e}")
                return False
        
        # Test the summary metrics table creation
        summary_table = bot._create_summary_metrics_table(
            symbols=symbols,
            currency=currency,
            expanded_symbols=expanded_symbols,
            portfolio_contexts=portfolio_contexts,
            specified_period=None
        )
        
        if summary_table and not summary_table.startswith("‚ùå"):
            print(f"   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ –º–µ—Ç—Ä–∏–∫ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # Check if CAGR 1y and CAGR 5y are in the table
            if "–°—Ä–µ–¥–Ω. –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (CAGR) 1 –≥–æ–¥" in summary_table:
                print(f"   ‚úÖ CAGR 1 –≥–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É")
            else:
                print(f"   ‚ùå CAGR 1 –≥–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
            
            if "–°—Ä–µ–¥–Ω. –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (CAGR) 5 –ª–µ—Ç" in summary_table:
                print(f"   ‚úÖ CAGR 5 –ª–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É")
            else:
                print(f"   ‚ùå CAGR 5 –ª–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
                
            print(f"\nüìã –ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –º–µ—Ç—Ä–∏–∫:")
            print(summary_table[:500] + "..." if len(summary_table) > 500 else summary_table)
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –º–µ—Ç—Ä–∏–∫: {summary_table}")
            return False
        
        # Test 3: Check describe table with property names
        print(f"\nüîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã describe —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –º–µ—Ç—Ä–∏–∫")
        
        describe_table = bot._create_describe_table(symbols, currency)
        
        if describe_table:
            print(f"   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ describe —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # Check if property names are used instead of numeric indices
            has_numeric_indices = any(str(i) in describe_table for i in range(20))
            has_property_names = any(prop in describe_table for prop in property_names[:5])
            
            if not has_numeric_indices and has_property_names:
                print(f"   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–æ–≤—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤")
            else:
                print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü—ã describe")
                print(f"      –ß–∏—Å–ª–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã: {has_numeric_indices}")
                print(f"      –ù–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {has_property_names}")
            
            print(f"\nüìã –ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã describe:")
            print(describe_table[:500] + "..." if len(describe_table) > 500 else describe_table)
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã describe")
            return False
        
        print(f"\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_compare_metrics_enhancement()
    if success:
        print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
