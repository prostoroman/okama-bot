#!/usr/bin/env python3
"""
Test script for chart period fix
Tests that different periods (1Y, 5Y) show different data ranges
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from services.tushare_service import TushareService
import pandas as pd
from datetime import datetime

def test_chart_period_data():
    """Test that different periods return different data ranges"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
    
    try:
        # Initialize Tushare service
        tushare_service = TushareService()
        
        # Test with a popular Chinese stock
        test_symbol = "000001.SZ"  # Ping An Bank
        symbol_info = tushare_service.get_symbol_info(test_symbol)
        
        if 'error' in symbol_info:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏–º–≤–æ–ª–µ {test_symbol}: {symbol_info['error']}")
            return False
        
        ts_code = symbol_info['ts_code']
        print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª: {test_symbol} (ts_code: {ts_code})")
        
        # Test 1Y period
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ 1Y...")
        data_1y = tushare_service.get_daily_data_by_days(ts_code, 252)
        
        if data_1y.empty:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ 1Y")
            return False
        
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ 1Y: {len(data_1y)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data_1y['trade_date'].min()}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data_1y['trade_date'].max()}")
        
        # Test 5Y period
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ 5Y...")
        data_5y = tushare_service.get_daily_data_by_days(ts_code, 1260)
        
        if data_5y.empty:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ 5Y")
            return False
        
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ 5Y: {len(data_5y)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data_5y['trade_date'].min()}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data_5y['trade_date'].max()}")
        
        # Verify that 5Y has more data than 1Y
        if len(data_5y) > len(data_1y):
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
            return False
        
        # Verify that 5Y starts earlier than 1Y
        if data_5y['trade_date'].min() < data_1y['trade_date'].min():
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
            return False
        
        # Verify that both periods end at the same time (latest data)
        if data_5y['trade_date'].max() == data_1y['trade_date'].max():
            print("‚úÖ –û–±–∞ –ø–µ—Ä–∏–æ–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ)")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è")
            return False
        
        # Calculate date ranges
        date_range_1y = (data_1y['trade_date'].max() - data_1y['trade_date'].min()).days
        date_range_5y = (data_5y['trade_date'].max() - data_5y['trade_date'].min()).days
        
        print(f"\nüìÖ –î–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:")
        print(f"   1Y: {date_range_1y} –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π")
        print(f"   5Y: {date_range_5y} –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π")
        
        # Verify that 5Y covers approximately 5 times more calendar days
        if date_range_5y > date_range_1y * 3:  # At least 3x more (allowing for weekends/holidays)
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç")
            return False
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_period_consistency():
    """Test that the same period returns consistent results"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–æ–≤...")
    
    try:
        tushare_service = TushareService()
        test_symbol = "000001.SZ"
        symbol_info = tushare_service.get_symbol_info(test_symbol)
        
        if 'error' in symbol_info:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏–º–≤–æ–ª–µ: {symbol_info['error']}")
            return False
        
        ts_code = symbol_info['ts_code']
        
        # Get 1Y data twice
        data_1y_1 = tushare_service.get_daily_data_by_days(ts_code, 252)
        data_1y_2 = tushare_service.get_daily_data_by_days(ts_code, 252)
        
        # Check if both calls return the same number of records
        if len(data_1y_1) == len(data_1y_2):
            print("‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ 1Y")
        else:
            print(f"‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π: {len(data_1y_1)} vs {len(data_1y_2)}")
            return False
        
        # Check if both calls return the same date range
        if (data_1y_1['trade_date'].min() == data_1y_2['trade_date'].min() and 
            data_1y_1['trade_date'].max() == data_1y_2['trade_date'].max()):
            print("‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ 1Y")
        else:
            print("‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ 1Y")
            return False
        
        print("üéâ –¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–ï–†–ò–û–î–û–í –ì–†–ê–§–ò–ö–û–í")
    print("=" * 60)
    
    success = True
    
    # Run tests
    success &= test_chart_period_data()
    success &= test_period_consistency()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    print("=" * 60)
