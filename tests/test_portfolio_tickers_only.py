#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã /portfolio
–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä—ã –±–µ–∑ –≤–µ—Å–æ–≤
"""

def test_portfolio_tickers_only():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("‚úÖ –¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ /portfolio")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è _request_portfolio_weights —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    import sys
    import os
    sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
    
    from bot import ShansAi
    
    bot = ShansAi()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    assert hasattr(bot, '_request_portfolio_weights'), "–§—É–Ω–∫—Ü–∏—è _request_portfolio_weights –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    assert hasattr(bot, '_handle_portfolio_tickers_weights_input'), "–§—É–Ω–∫—Ü–∏—è _handle_portfolio_tickers_weights_input –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∏–∫–µ—Ä–æ–≤ –±–µ–∑ –≤–µ—Å–æ–≤ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è portfolio_command –æ–±–Ω–æ–≤–ª–µ–Ω–∞
    import inspect
    portfolio_command_source = inspect.getsource(bot.portfolio_command)
    
    assert 'tickers_only' in portfolio_command_source, "–û–±—Ä–∞–±–æ—Ç–∫–∞ tickers_only –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ portfolio_command"
    assert '_request_portfolio_weights' in portfolio_command_source, "–í—ã–∑–æ–≤ _request_portfolio_weights –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ portfolio_command"
    
    print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ portfolio_command –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    assert '%' in portfolio_command_source, "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ portfolio_command"
    
    print("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–∏—â–µ–º –º–µ—Ç–æ–¥ handle_message)
    if hasattr(bot, 'handle_message'):
        message_handler_source = inspect.getsource(bot.handle_message)
        assert 'portfolio_tickers' in message_handler_source, "–û–±—Ä–∞–±–æ—Ç–∫–∞ portfolio_tickers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ handle_message"
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:")
    print("‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä–æ–≤ –±–µ–∑ –≤–µ—Å–æ–≤")
    print("‚Ä¢ –ó–∞–ø—Ä–æ—Å –≤–µ—Å–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–Ω—è—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º")
    print("‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –¥–æ–ª–µ–π –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (50% –≤–º–µ—Å—Ç–æ 0.5)")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤–≤–æ–¥–∞")
    print("‚Ä¢ –ü–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö")


if __name__ == '__main__':
    test_portfolio_tickers_only()
