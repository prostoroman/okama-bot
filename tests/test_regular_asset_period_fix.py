#!/usr/bin/env python3
"""
Test script for regular asset chart period fix
Tests that different periods (1Y, 5Y, MAX) show different data ranges for regular assets
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import okama as ok
import pandas as pd
from datetime import datetime

def test_regular_asset_period_data():
    """Test that different periods return different data ranges for regular assets"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤...")
    
    try:
        # Test with a popular US stock
        test_symbol = "AAPL.US"
        print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª: {test_symbol}")
        
        # Create asset
        asset = ok.Asset(test_symbol)
        
        # Get daily data
        daily_data = asset.close_daily
        print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(daily_data)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {daily_data.index[0]}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {daily_data.index[-1]}")
        
        # Test 1Y period (252 trading days)
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ 1Y...")
        data_1y = daily_data.tail(252)
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ 1Y: {len(data_1y)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data_1y.index[0]}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data_1y.index[-1]}")
        
        # Test 5Y period (1260 trading days)
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ 5Y...")
        data_5y = daily_data.tail(1260)
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ 5Y: {len(data_5y)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data_5y.index[0]}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data_5y.index[-1]}")
        
        # Test MAX period (all available data)
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ MAX...")
        data_max = daily_data
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ MAX: {len(data_max)}")
        print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data_max.index[0]}")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data_max.index[-1]}")
        
        # Verify that 5Y has more data than 1Y
        if len(data_5y) > len(data_1y):
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
            return False
        
        # Verify that MAX has more data than 5Y
        if len(data_max) >= len(data_5y):
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ MAX —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 5Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ MAX –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —á–µ–º –ø–µ—Ä–∏–æ–¥ 5Y")
            return False
        
        # Verify that 5Y starts earlier than 1Y
        if data_5y.index[0] < data_1y.index[0]:
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –ø–µ—Ä–∏–æ–¥ 1Y")
            return False
        
        # Verify that MAX starts earlier than 5Y
        if data_max.index[0] <= data_5y.index[0]:
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ MAX –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ –∏–ª–∏ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è, —á–µ–º –ø–µ—Ä–∏–æ–¥ 5Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ MAX –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –ø–µ—Ä–∏–æ–¥ 5Y")
            return False
        
        # Verify that all periods end at the same time (latest data)
        if (data_5y.index[-1] == data_1y.index[-1] == data_max.index[-1]):
            print("‚úÖ –í—Å–µ –ø–µ—Ä–∏–æ–¥—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ)")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è")
            return False
        
        # Calculate date ranges using len() since we're dealing with trading days
        print(f"\nüìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π:")
        print(f"   1Y: {len(data_1y)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π")
        print(f"   5Y: {len(data_5y)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π")
        print(f"   MAX: {len(data_max)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π")
        
        # Verify that 5Y covers approximately 5 times more trading days than 1Y
        if len(data_5y) > len(data_1y) * 4:  # At least 4x more (5Y should be ~5x 1Y)
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ 5Y –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π, —á–µ–º 1Y")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ 5Y –Ω–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π, —á–µ–º 1Y")
            return False
        
        # Verify that MAX covers the most trading days
        if len(data_max) >= len(data_5y):
            print("‚úÖ –ü–µ—Ä–∏–æ–¥ MAX –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π")
        else:
            print("‚ùå –ü–µ—Ä–∏–æ–¥ MAX –Ω–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π")
            return False
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return False

def test_period_filtering_logic():
    """Test the period filtering logic"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–∏–æ–¥–æ–≤...")
    
    try:
        test_symbol = "AAPL.US"
        asset = ok.Asset(test_symbol)
        daily_data = asset.close_daily
        
        # Test different period configurations
        periods = {
            '1Y': 252,
            '5Y': 1260,
            'MAX': len(daily_data)
        }
        
        for period_name, trading_days in periods.items():
            print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ {period_name} ({trading_days} —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π)...")
            
            # Apply filtering logic
            if trading_days < len(daily_data):
                filtered_data = daily_data.tail(trading_days)
            else:
                filtered_data = daily_data
            
            print(f"   –ò—Å—Ö–æ–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(daily_data)}")
            print(f"   –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(filtered_data)}")
            print(f"   –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {filtered_data.index[0]}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {filtered_data.index[-1]}")
            
            # Verify filtering worked correctly
            if period_name == 'MAX':
                if len(filtered_data) == len(daily_data):
                    print(f"   ‚úÖ –ü–µ—Ä–∏–æ–¥ {period_name}: –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                else:
                    print(f"   ‚ùå –ü–µ—Ä–∏–æ–¥ {period_name}: –¥–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä—è–Ω—ã")
                    return False
            else:
                if len(filtered_data) <= trading_days:
                    print(f"   ‚úÖ –ü–µ—Ä–∏–æ–¥ {period_name}: –¥–∞–Ω–Ω—ã–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                else:
                    print(f"   ‚ùå –ü–µ—Ä–∏–æ–¥ {period_name}: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö")
                    return False
        
        print("\nüéâ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("=" * 70)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–ï–†–ò–û–î–û–í –ì–†–ê–§–ò–ö–û–í –î–õ–Ø –û–ë–´–ß–ù–´–• –ê–ö–¢–ò–í–û–í")
    print("=" * 70)
    
    success = True
    
    # Run tests
    success &= test_regular_asset_period_data()
    success &= test_period_filtering_logic()
    
    print("\n" + "=" * 70)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    print("=" * 70)
