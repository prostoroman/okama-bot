#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ API –æ—Ç–≤–µ—Ç–æ–≤ YandexGPT
"""

import sys
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def debug_api():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç API –æ—Ç–≤–µ—Ç—ã"""
    
    try:
        from config import Config
        from yandexgpt_service import YandexGPTService
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        Config.validate()
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        yandexgpt_service = YandexGPTService()
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        test_prompt = "–°–∫–∞–∂–∏ '–ü—Ä–∏–≤–µ—Ç, —Ç–µ—Å—Ç!'"
        
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å...")
        response = yandexgpt_service._call_yandex_api(
            system_prompt="–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ.",
            user_prompt=test_prompt,
            temperature=0.1,
            max_tokens=50
        )
        
        logger.info(f"üìù –û—Ç–≤–µ—Ç API: '{response}'")
        logger.info(f"üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(response)}")
        logger.info(f"üîç –°–æ–¥–µ—Ä–∂–∏—Ç '—Ç–µ—Å—Ç': {'—Ç–µ—Å—Ç' in response.lower()}")
        logger.info(f"üîç –°–æ–¥–µ—Ä–∂–∏—Ç '–ø—Ä–∏–≤–µ—Ç': {'–ø—Ä–∏–≤–µ—Ç' in response.lower()}")
        
        # –¢–µ—Å—Ç —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
        logger.info("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        finance_response = yandexgpt_service._call_yandex_api(
            system_prompt="–¢—ã - —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
            user_prompt="–û–ø–∏—à–∏ —Ç—Ä–µ–Ω–¥ –∞–∫—Ü–∏–∏ SBER",
            temperature=0.7,
            max_tokens=200
        )
        
        logger.info(f"üìù –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–≤–µ—Ç: '{finance_response}'")
        logger.info(f"üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(finance_response)}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    debug_api()
